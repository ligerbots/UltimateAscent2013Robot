// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2877.UltimateAscent2013Robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc2877.UltimateAscent2013Robot.Robot;

/**
 *
 */
public class  Drive extends Command {
    boolean mecanumOn = false;
    public Drive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        System.out.println("Drive constructor called");

    }

    // Called just before this Command runs the first time
    protected void initialize() {
        System.out.println("Initialize Drive");
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        double x = Robot.oi.joystick1.getX();
        // negative here because we were driving backwards
        double y = Robot.oi.joystick1.getY();
        
        SmartDashboard.putNumber("Joystick Y", y);
        SmartDashboard.putNumber("Joystick X", x);
        mecanumOn = Robot.oi.buttonMecanum.get();
        
        //System.out.println("mecanumOn = " + mecanumOn);
        //Robot.driveTrain.hidDrive(Robot.oi.joystick1, mecanumOn);
        Robot.driveTrain.drive(x, y, mecanumOn); 
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.drive(0, 0, mecanumOn);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
